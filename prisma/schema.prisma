// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id          Int      @id @default(autoincrement())
  login       String
  password    String
  class       String
  role        String
  crdate      DateTime @default(now())
  update      DateTime @default(now())
  News  News[]
  Course Course[]
}

model News {
  id           Int      @id @default(autoincrement())
  title        String
  content      String
  createdAt    DateTime @default(now())
  authorId     Int
  author       Account  @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Course { //Курс
    id        Int      @id @default(autoincrement())
    title     String
    Chapter    Chapter[]
    authorId     Int
    author       Account  @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Chapter {
    id        Int      @id @default(autoincrement())
    title     String
    id_course Int
    course   Course   @relation(fields: [id_course], references: [id], onDelete: Cascade)
    order     Int
    lessons   Lesson[]
}

model Lesson {
    id          Int      @id @default(autoincrement())
    title       String
    videoUrl    String?  
    theory      String?  
    task        String?  
    correct_task String?
    id_chapter     Int
    chapter       Chapter    @relation(fields: [id_chapter], references: [id], onDelete: Cascade)
    Quiz        Quiz[]
}

model Quiz {
    id          Int      @id @default(autoincrement())
    title       String
    questions   Question[]
    lesson        Lesson    @relation(fields: [id_lesson], references: [id], onDelete: Cascade)
    id_lesson      Int    
}

model Question {
    id            Int      @id @default(autoincrement())
    quizId        Int
    text          String
    correctAnswer String    // Правильный ответ, может быть текстом ответа
    quiz          Quiz      @relation(fields: [quizId], references: [id], onDelete: Cascade)
    choices       Choice[]  // Связь с вариантами ответов
}

model Choice {
    id        Int      @id @default(autoincrement())
    questionId Int
    text      String   // Текст варианта ответа
    isCorrect Boolean  // Является ли вариант правильным ответом
    question  Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
}
